{
  "name": "super-firebase-angular",
  "version": "0.0.6",
  "license": "MIT",
  "description": "All-In-One firebase and angular project.",
  "homepage": "https://github.com/supermurat/super-firebase-angular",
  "author": "Murat Demir (hisupermurat@gmail.com)",
  "repository": {
    "type": "git",
    "url": "git+https://github.com/supermurat/super-firebase-angular.git"
  },
  "bugs": {
    "url": "https://github.com/supermurat/super-firebase-angular/issues"
  },
  "keywords": [],
  "scripts": {
    "ng": "ng",
    "start": "ng serve",
    "start:en": "ng serve --configuration=en",
    "start:tr": "ng serve --configuration=tr",
    "build": "ng build",
    "build:i18n": "ng run super-firebase-angular:build:en && ng run super-firebase-angular:build:tr",
    "build:beta:i18n": "ng run super-firebase-angular:build:beta-en && ng run super-firebase-angular:build:beta-tr",
    "build:production:i18n": "ng run super-firebase-angular:build:production-en && ng run super-firebase-angular:build:production-tr",
    "server": "ng run super-firebase-angular:server",
    "server:i18n": "ng run super-firebase-angular:server:en && ng run super-firebase-angular:server:tr",
    "server:beta:i18n": "ng run super-firebase-angular:server:beta-en && ng run super-firebase-angular:server:beta-tr",
    "server:production:i18n": "ng run super-firebase-angular:server:production-en && ng run super-firebase-angular:server:production-tr",
    "deploy:prepare:beta": "npm run build:beta:i18n && npm run server:beta:i18n && npm run copyToPublic && npm run test:cover && npm run copyCoverageToPublic && npm run compodoc && npm run copyDocumentationToPublic && npm run deploy:prepare:functions",
    "deploy:prepare:prod": "npm run build:production:i18n && npm run server:production:i18n && npm run copyToPublic && npm run test:cover && npm run copyCoverageToPublic && npm run compodoc && npm run copyDocumentationToPublic && npm run deploy:prepare:functions",
    "deploy:prepare:functions": "npm run build:functions && npm run test:cover:functions && npm run copyFunctionsCoverageToPublic && npm --prefix \"./functions\" run typedoc && npm run copyFunctionsDocumentationToPublic && npm run test:combine:all",
    "deploy:beta": "npm run deploy:prepare:beta && firebase deploy --project super-murat-beta",
    "deploy:prod": "npm run deploy:prepare:prod && firebase deploy --project supermurat-com",
    "test": "ng test",
    "test:cover": "del-cli \"./coverage\" && ng test --watch=false --code-coverage",
    "test:cover:open": "npm run test:cover && open-cli \"./coverage/index.html\"",
    "/* Run twice to fix '%0 covered' issue */": "",
    "test:cover:functions": "npm --prefix \"./functions\" run test:cover && npm --prefix \"./functions\" run test:cover",
    "test:cover:all": "npm run test:cover && npm run build:i18n && npm run server:i18n && npm run test:cover:functions && npm run test:combine:all",
    "test:combine:all": "del-cli \"./public/all-coverage\" && istanbul-combine -d \"./public/all-coverage\" -p summary -b \"./\" -r lcov -r html \"./coverage/coverage-final.json\" \"./functions/coverage/coverage-final.json\"",
    "lint:all": "npm run lint && npm run lint:functions",
    "lint": "ng lint && npm run stylelint && npm run lint:html && npm run lint:md",
    "lint:functions": "npm --prefix \"./functions\" run lint",
    "lint:md": "remark .",
    "lint:html": "htmlhint \"src\" --config .htmlhintrc",
    "stylelint": "stylelint \"src/**/*.scss\" --syntax scss",
    "e2e": "ng e2e",
    "e2e:browserstack": "ng e2e --configuration=browserstack",
    "e2e:browserstack:prod": "protractor e2e/protractor.browserstack.prod.conf.js",
    "e2e:browserstack:beta": "protractor e2e/protractor.browserstack.beta.conf.js",
    "build:functions": "npm --prefix \"./functions\" run build",
    "serve": "del-cli \"./functions/dist/*\" && npm run build && npm run server && npm run copyToPublic && npm run serve:only:firebase:beta",
    "serve:i18n": "del-cli \"./functions/dist/*\" && npm run build:i18n && npm run server:i18n && npm run copyToPublic && npm run serve:only:firebase:beta",
    "serve:beta:i18n": "del-cli \"./functions/dist/*\" && npm run build:beta:i18n && npm run server:beta:i18n && npm run copyToPublic && npm run serve:only:firebase:beta",
    "serve:production:i18n": "del-cli \"./functions/dist/*\" && npm run build:production:i18n && npm run server:production:i18n && npm run copyToPublic && npm run serve:only:firebase:prod",
    "serve:only:firebase:beta": "npm run build:functions && firebase serve --project super-murat-beta",
    "serve:only:firebase:prod": "npm run build:functions && firebase serve --project supermurat-com",
    "copyToPublic": "del-cli \"./public/*\" && ncp \"./functions/dist/browser\" \"./public\" && npm run deleteIndexFromPublic",
    "copyCoverageToPublic": "ncp \"./coverage\" \"./public/coverage\"",
    "copyDocumentationToPublic": "ncp \"./documentation\" \"./public/documentation\"",
    "copyFunctionsCoverageToPublic": "ncp \"./functions/coverage\" \"./public/functions-coverage\"",
    "copyFunctionsDocumentationToPublic": "ncp \"./functions/documentation\" \"./public/functions-documentation\"",
    "deleteIndexFromPublic": "del-cli \"./public/index.html\" && del-cli \"./public/en/index.html\" && del-cli \"./public/tr/index.html\"",
    "extract:i18n": "ng xi18n --output-path locale && xliffmerge --profile xliffmerge.json",
    "stats": "ng build --stats-json && webpack-bundle-analyzer \"./functions/dist/browser/stats-es2015.json\" --host 127.0.0.1 --port 8042",
    "stats:i18n:en": "ng run super-firebase-angular:build:en --stats-json && webpack-bundle-analyzer \"./functions/dist/browser/en/stats-es2015.json\" --host 127.0.0.1 --port 8043",
    "stats:i18n:tr": "ng run super-firebase-angular:build:tr --stats-json && webpack-bundle-analyzer \"./functions/dist/browser/tr/stats-es2015.json\" --host 127.0.0.1 --port 8044",
    "stats:beta:i18n:en": "ng run super-firebase-angular:build:beta-en --stats-json && webpack-bundle-analyzer \"./functions/dist/browser/en/stats-es2015.json\" --host 127.0.0.1 --port 8045",
    "stats:beta:i18n:tr": "ng run super-firebase-angular:build:beta-tr --stats-json && webpack-bundle-analyzer \"./functions/dist/browser/tr/stats-es2015.json\" --host 127.0.0.1 --port 8046",
    "stats:production:i18n:en": "ng run super-firebase-angular:build:production-en --stats-json && webpack-bundle-analyzer \"./functions/dist/browser/en/stats-es2015.json\" --host 127.0.0.1 --port 8047",
    "stats:production:i18n:tr": "ng run super-firebase-angular:build:production-tr --stats-json && webpack-bundle-analyzer \"./functions/dist/browser/tr/stats-es2015.json\" --host 127.0.0.1 --port 8048",
    "install:dependencies:global": "npm install -g firebase-tools@7.12.1 @angular/cli@8.3.26 selenium-webdriver @compodoc/compodoc ncp del-cli open-cli webpack-bundle-analyzer @commitlint/cli",
    "install:dependencies:travis": "npm install -g firebase-tools@7.12.1 @angular/cli@8.3.26 selenium-webdriver @compodoc/compodoc ncp del-cli @commitlint/travis-cli",
    "install:dependencies": "npm install && cd functions && npm install",
    "browserslist": "npx browserslist --config=\"./src/browserslist\"",
    "compodoc": "del-cli \"./documentation\" && compodoc -n \"super-firebase-angular documentation\" -p src/tsconfig.app.json --unitTestCoverage ./coverage/coverage-summary.json",
    "compodoc:open": "npm run compodoc && open-cli \"./documentation/index.html\"",
    "compodoc:cover": "compodoc -p src/tsconfig.app.json --coverageTest 70",
    "commit": "commit-wizard",
    "clean": "del-cli \"./public\" && del-cli \"./coverage\" && del-cli \"./documentation\" && del-cli \"./functions/coverage\" && del-cli \"./functions/lib\" && del-cli \"./functions/dist\" && del-cli \"./functions/documentation\""
  },
  "private": true,
  "dependencies": {
    "@angular/animations": "8.2.14",
    "@angular/common": "8.2.14",
    "@angular/compiler": "8.2.14",
    "@angular/core": "8.2.14",
    "@angular/fire": "5.3.0",
    "@angular/forms": "8.2.14",
    "@angular/platform-browser": "8.2.14",
    "@angular/platform-browser-dynamic": "8.2.14",
    "@angular/platform-server": "8.2.14",
    "@angular/pwa": "0.803.26",
    "@angular/router": "8.2.14",
    "@angular/service-worker": "8.2.14",
    "@fortawesome/fontawesome-free": "5.13.0",
    "@ng-bootstrap/ng-bootstrap": "5.3.1",
    "@ngx-loading-bar/core": "4.2.0",
    "@ngx-loading-bar/router": "4.2.0",
    "angular2-cookie-law": "^7.0.1",
    "angulartics2": "8.3.0",
    "bootstrap": "4.4.1",
    "classlist.js": "1.1.20150312",
    "core-js": "3.6.5",
    "firebase": "7.14.2",
    "grpc": "1.24.2",
    "protractor": "5.4.4",
    "rxjs": "6.5.5",
    "tslib": "1.11.1",
    "zone.js": "0.10.3"
  },
  "devDependencies": {
    "@angular-devkit/build-angular": "0.803.26",
    "@angular/cli": "8.3.26",
    "@angular/compiler-cli": "8.2.14",
    "@angular/language-service": "8.2.14",
    "@commitlint/cli": "~8.3.5",
    "@commitlint/config-conventional": "~8.3.4",
    "@types/jasmine": "~3.5.10",
    "@types/jasminewd2": "~2.0.8",
    "@types/node": "~13.13.4",
    "acorn": "^7.1.1",
    "angular-tslint-rules": "~1.20.4",
    "browserslist": "~4.12.0",
    "browserstack-local": "~1.4.5",
    "codacy-coverage": "~3.4.0",
    "codelyzer": "~5.2.2",
    "coveralls": "~3.1.0",
    "husky": "~4.2.5",
    "htmlhint": "~0.11.0",
    "istanbul-combine": "https://github.com/glennvgastel/istanbul-combine/archive/master.tar.gz",
    "jasmine-core": "~3.5.0",
    "jasmine-spec-reporter": "~5.0.2",
    "jquery": "~3.5.0",
    "karma": "~5.0.4",
    "karma-chrome-launcher": "~3.1.0",
    "karma-cli": "~2.0.0",
    "karma-coverage-istanbul-reporter": "~3.0.0",
    "karma-jasmine": "~3.1.1",
    "karma-jasmine-html-reporter": "~1.5.3",
    "karma-mocha-reporter": "~2.2.5",
    "karma-scss-preprocessor": "4.0.0",
    "ngx-i18nsupport": "~0.17.1",
    "node-sass": "~4.14.0",
    "popper.js": "~1.16.1",
    "remark-cli": "~8.0.0",
    "remark-lint": "~7.0.0",
    "remark-preset-lint-markdown-style-guide": "~3.0.0",
    "remark-preset-lint-recommended": "^4.0.0",
    "stylelint": "~13.3.3",
    "stylelint-config-recommended-scss": "~4.2.0",
    "stylelint-config-standard": "~20.0.0",
    "stylelint-scss": "~3.17.1",
    "terser": "4.6.13",
    "ts-node": "~8.9.1",
    "tslint": "5.20.1",
    "typescript": "3.5.3",
    "webpack": "~4.43.0",
    "webpack-bundle-analyzer": "~3.7.0"
  },
  "husky": {
    "hooks": {
      "commit-msg": "commitlint -E HUSKY_GIT_PARAMS",
      "pre-commit": "echo 'Pre-commit: running lint...' && npm run lint:all"
    }
  },
  "commitlint": {
    "extends": [
      "@commitlint/config-conventional"
    ]
  }
}
